import platform
import flet as ft
import os
import pyttsx3
import requests
import json

OLLAMA_URL = "http://localhost:11434/api/generate"
MODEL = "qwen2.5:3b"

SO = platform.system()
if SO == "Darwin":
    PERSONAJE = "Alvert Einstein"; EMOJI_PERSONAJE = "üßë‚Äçüî¨"; VOZ = "Juan"
elif SO == "Windows":
    PERSONAJE = "Marie Curie"; EMOJI_PERSONAJE = "üë©‚Äçüî¨"; VOZ = "Sabina"
else:
    PERSONAJE = "Stive Jobs"; EMOJI_PERSONAJE = "üë®‚Äçüî¨üî¨"; VOZ = "Juan"

EMOJI_USUARIO = "üßë‚Äçüíª"
OLLAMA_OPTIONS = {"num_ctx":4096, "num_predict": 512, "temperature": 1.7, "top_p": 2.9, "repear_pnalty": 3.1}
KEPP_ALIVE = "30m"
session = requests.Session() 

_tts_engine = None
def hablar(texto, voz=VOZ):
    global _tts_engine
    limpio = texto.replace("*","").replace("_","").replace("#","")
    if SO == "Darwin" and voz:
        os.sistem(f'say -v "{voz}" "{limpio}"')
    elif SO == "Windows" and voz:
        try:
            if _tts_engine is None:
                _tts_engine = pyttsx3.init()
                for v in _tts_engine.getProperty('voices'):
                        if voz.lower() in v.name.lower():
                            _tts_engine.setProperty('voice', v.id)
                            break
                _tts_engine.setProperty('rate', 160)
                _tts_engine.setProperty('volume', 0.9)
            _tts_engine.say(limpio)
            _tts_engine.runAndWait()   
        except Exception as e:
            print(f"Error en TTS: {e}")
                                    
def main(page: ft.Page):
    page.title = f"Chat con {PERSONAJE}"
    page.bgcolor = ft.Colors.RED_400

    mensajes = ft.ListView(expand=True, spacing=10, padding=20, auto_scroll=True,)
    prompt = ft.TextField(label="Escribe tu mensaje...", expand=True, multiline=True, min_lines=1, max_lines=4)

    def burbuja(texto, es_usuario):
        return ft.Row(
            [
                ft.Text(EMOJI_USUARIO if es_usuario else EMOJI_PERSONAJE, size=25),
                ft.Container(
                    content=ft.Text(texto, color=ft.Colors.BLACK if es_usuario else ft.Colors.BLACK, size=16, selectable=True),
                    bgcolor=ft.Colors.BLUE_400 if es_usuario else ft.Colors.YELLOW,
                    padding=12,
                    border_radius=50,
                    width=350,
                )
            ] if es_usuario else[
                ft.Container(
                    content=ft.Text(texto, color= ft.Colors.BLACK, size = 15, selectable=True),
                    bgcolor=ft.Colors.GREY_300,
                    padding=12,
                    border_radius=50,
                    width=350,
                    ),
                    ft.Text(EMOJI_PERSONAJE, size=25),
                ],
                alignment=ft.MainAxisAlignment.END if es_usuario else ft.MainAxisAlignment.START,
        )
    
    def enviar_click_streaming(e):
        texto = prompt.value.strip()
        if not texto:
            return
        mensajes.controls.append(burbuja(texto, es_usuario=True))
        page.update()
        page.value = ""
        page.update()

        prompt_personaje = (
            f"responde como si fueras {PERSONAJE}. "
            "Habla con su estilo y personalidad."
            "Responde en espa√±ol de manera clara y concisa."
            f"Pregunta del usuario: {texto}"
        )

        live_text = ft.Text("", color=ft.Colors.BLACK, size=16, selectable=True)
        cont = ft.Row([
            ft.Container(content=live_text, bgcolor=ft.Colors.BLUE_GREY_400, padding=12, border_radius=50, width=350),
            ft.Text(EMOJI_PERSONAJE, size=25),
            ], alignment=ft.MainAxisAlignment.START)
        mensajes.controls.append(cont)
        page.update()

        try:
            r = session.post(
                    OLLAMA_URL,
                    json={"model": MODEL, "prompt": prompt_personaje, "stream": True, "keep_alive": KEPP_ALIVE, "options": OLLAMA_OPTIONS},
                    stream=True,
                    timeout=300,
            )
            r.raise_for_status()
            completo = ""
            for line in r.iter_lines():
                if not line:
                    continue
                data = json.loads(line)
                if "response" in data:
                    completo += data["response"]
                    live_text.value = completo
                    page.update()
                elif "error" in data:
                    completo = f"Error de Ollama: {data['error']}"
                    break

            if not completo:
                completo = "No se recibio respuesta del modelo."
            live_text.value = completo
            page.update()

            if VOZ:
                try:
                    hablar(completo, voz=VOZ)
                except Exception as ex:
                        print(f"TTS error: {ex}")

        except Exception as ex:
            live_text.value = f"Error de conexion o inesperado: {ex}"
            page.update()
    
    def limpiar_chat(e):
            mensajes.controls.clear()
            page.update()

    def provar_voz(e):
        if VOZ:
            hablar(f"Hola soy {PERSONAJE}. Esta es mi voz.", voz=VOZ)

    header = ft.Container(
        content=ft.Row([
                ft.Text(EMOJI_PERSONAJE, size=35),
                ft.Text(f"Chat con {PERSONAJE}", size=24, weight="bold", color=ft.Colors.BLUE_900),
        ], alignment=ft.MainAxisAlignment.START, spacing=15),
        padding=ft.padding.symmetric(vertical=16, horizontal=10),
        bgcolor=ft.Colors.RED_600,
        border_radius=ft.border_radius.only(top_left=20, top_right=20),
        shadow=ft.BoxShadow(blur_radius=12, color=ft.Colors.GREY_300, offset=ft.Offset(0, 2))
    )

    boton_enviar = ft.ElevatedButton("Enviar", on_click=enviar_click_streaming, bgcolor=ft.Colors.BLUE_400, color=ft.Colors.WHITE)
    prompt.on_submit = enviar_click_streaming


    page.add(
        ft.Container(
            content=ft.Column([
                header,
                mensajes, 
                ft.Row([
                    ft.ElevatedButton("üé§Provar voz", on_click=provar_voz, bgcolor=ft.Colors.GREEN_400, color=ft.Colors.WHITE),
                    ft.TextButton("üßπLimpiar chat", on_click=limpiar_chat),
                ], alignment=ft.MainAxisAlignment.START, spacing=10),
                ft.Row([prompt, boton_enviar],vertical_alignment=ft.CrossAxisAlignment.END),
            ], expand=True,spacing=10),
            expand=True,
            bgcolor=ft.Colors.RED_900,
        )
    )

ft.app(target=main)